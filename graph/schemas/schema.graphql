type Sector {
  id: ID!
  label: String!
  label_english: String
  exchange: String!
}

input CompanySearchParams {
  exchange: String
  sectorIds: [String]
}

type Company {
  id: ID!
  code: String!
  name: String!
  exchange: String!
  sectorId: String!
}

scalar Time
type Trade {
  code: String!
  closePrice: Int!
  volume: Int!
  date: Time!
  openPrice: Int!
  highPrice: Int!
  lowPrice: Int!
  avgPrice: Int!
  buyOrder: Int!
  buyVolume: Int!
  sellOrder: Int!
  sellVolume: Int!
  matchedVolume: Int!
  matchedValue: Int!
  putThroughOrder: Int!
  putThroughVolume: Int!
  putThroughValue: Int!
  foreignRemainVolume: Int!
  foreignBuyVolume: Int!
  foreignBuyValue: Int!
  foreignSellVolume: Int!
  foreignSellValue: Int!
  foreignPutThroughVolume: Int!
  foreignPutThroughValue: Int!
}

type Query {
  sectors(exchange: String): [Sector!]!
  companies(searchParams: CompanySearchParams): [Company!]!
  company(exchange: String!, code: String!): Company!
  trades(code: String!): [Trade!]!
  tradeMatching(code: String!): [Trade!]!
  tradePutThrough(code: String!): [Trade!]!
  tradeForeign(code: String!): [Trade!]!
}
